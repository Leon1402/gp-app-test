{"version":3,"sources":["redux/redux.js","Table/Table.jsx","ModalAddNew/ModalAddNew.jsx","App.js","reportWebVitals.js","index.js"],"names":["SET_DATA","DELETE_ITEM","ADD_NEW_CHEQUE","initState","initialized","store","createStore","state","action","type","data","filter","item","index","indexOf","TableComponent","props","convertDate","date","convertedDate","Date","console","log","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minutes","getMinutes","second","getSeconds","map","sum","pays","reduce","acc","n","productCount","positions","quantity","key","dateReg","kioskName","chequeType","status","pay","productsName","itm","i","length","name","useState","selectedRowKeys","setSelectedRowKeys","rowSelection","onChange","className","danger","onClick","deleteItem","dataSource","columns","title","dataIndex","Type","Item","label","rules","required","message","options","value","placeholder","Kiosks","ModalAddNew","visible","onCreate","onCancel","Form","useForm","form","okText","cancelText","onOk","validateFields","then","values","resetFields","catch","info","alert","layout","initialValues","modifier","showTime","format","defaultValue","min","step","connect","getDataFromJson","cheques","addNewCheque","setVisible","Table","newCheque","toDate","toFixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7e7c4a2.chunk.js","sourcesContent":["import { createStore } from \"redux\";\r\nimport data from '../data/data.json'\r\n\r\nconst SET_DATA = 'SET_DATA';\r\nconst DELETE_ITEM = 'DELETE_ITEM';\r\nconst ADD_NEW_CHEQUE = 'ADD_NEW_CHEQUE';\r\n\r\nlet initState = {\r\n    initialized: false\r\n}\r\n\r\nlet dataStore = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                initialized: true\r\n            }\r\n        case DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                data: [...state.data.filter((item, index) => \r\n                    action.index.indexOf(index) === -1\r\n                )]\r\n            }\r\n        case ADD_NEW_CHEQUE:\r\n            return {\r\n                ...state,\r\n                data: [\r\n                    ...state.data, action.data\r\n                ] \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nlet store = createStore(dataStore);\r\n\r\nexport const getDataFromJson = () => {\r\n    return {type: SET_DATA, data: data.data.cheques}\r\n}\r\n\r\nexport const deleteItem = index => {\r\n    return {type: DELETE_ITEM, index}\r\n}\r\n\r\nexport const addNewCheque = data => {\r\n    return {type: ADD_NEW_CHEQUE, data}\r\n}\r\n\r\nexport default store;","import { Button, Table } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\nfunction TableComponent(props) {\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Дата покупки',\r\n            dataIndex: 'dateReg',\r\n            key: 'dateReg',\r\n        },\r\n        {\r\n            title: 'Киоск',\r\n            dataIndex: 'kioskName',\r\n            key: 'kioskName',\r\n        },\r\n        {\r\n            title: 'Тип',\r\n            dataIndex: 'chequeType',\r\n            key: 'chequeType',\r\n        },\r\n        {\r\n            title: 'Статус оплаты',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n        },\r\n        {\r\n            title: 'Оплата',\r\n            dataIndex: 'pay',\r\n            key: 'pay',\r\n        },\r\n        {\r\n            title: 'Сумма',\r\n            dataIndex: 'sum',\r\n            key: 'sum',\r\n        },\r\n        {\r\n            title: 'Кол-во товара',\r\n            dataIndex: 'productCount',\r\n            key: 'productCount',\r\n        },\r\n        {\r\n            title: 'Товары',\r\n            dataIndex: 'productsName',\r\n            key: 'productsName',\r\n        },\r\n    ];\r\n\r\n    const convertDate = date => {\r\n        let convertedDate = new Date(date);\r\n        console.log('1 ', date)\r\n        console.log('2', convertedDate)\r\n\r\n        let year = convertedDate.getFullYear();\r\n        let month = convertedDate.getMonth() + 1;\r\n        let day = convertedDate.getDate();\r\n        let hour = convertedDate.getHours()\r\n        let minutes = convertedDate.getMinutes();\r\n        let second = convertedDate.getSeconds();\r\n\r\n        month = month < 10 ? '0' + month :  month;\r\n        day = day < 10 ? '0' + day :  day;\r\n        minutes = minutes < 10 ? '0' + minutes :  minutes;\r\n        second = second < 10 ? '0' + second :  second;\r\n\r\n        return (`${day}.${month}.${year}, ${hour}:${minutes}:${second}`)\r\n    }\r\n\r\n    const data = props.data.map((item, index) => {\r\n        const sum = item.pays.reduce((acc, n) => acc + n.sum, 0);\r\n        const productCount = item.positions.reduce((acc, n) => acc + n.quantity, 0);\r\n        const status =() => {\r\n            if (sum === item.sum || sum > item.sum)\r\n                return 'Оплачено';\r\n            else if (sum < item.sum)\r\n                return 'Недоплата';\r\n            else return 'Нет оплаты'; \r\n        }\r\n        return {\r\n            key: index,\r\n            dateReg: convertDate(item.dateReg),\r\n            kioskName: item.kioskName,\r\n            chequeType: item.chequeType ? 'Возврат' : 'Продажа',\r\n            status: status(),\r\n            pay: sum / 100,\r\n            sum: item.sum / 100,\r\n            productCount: productCount,\r\n            productsName: item.positions.map((itm, i) => {\r\n                if (i < item.positions.length - 1)\r\n                    return itm.name + ', '\r\n                return itm.name\r\n            })\r\n        }\r\n    });\r\n\r\n\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n    const onSelectChange = item => {\r\n        setSelectedRowKeys(item);\r\n    };\r\n\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: onSelectChange\r\n    };\r\n\r\n    return (\r\n        <div className=\"table\">\r\n            <Button danger\r\n                type='primary'\r\n                className={!selectedRowKeys.length ? 'disable' : 'active'}\r\n                onClick={() => {\r\n                    props.deleteItem(selectedRowKeys);\r\n                    setSelectedRowKeys([]);\r\n                }}\r\n            >Удалить выбранные чеки</Button>\r\n            <Table\r\n                rowSelection={rowSelection}\r\n                dataSource={data}\r\n                columns={columns} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableComponent;","import { Modal, Form, DatePicker, Cascader, InputNumber, Input } from 'antd';\r\n\r\nfunction ModalAddNew({ visible, onCreate, onCancel }) {\r\n  const config = {\r\n    rules: [\r\n      {\r\n        type: 'object',\r\n        required: true,\r\n        message: 'Введите дату!',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Добавить новый чек\"\r\n      okText=\"Добавить\"\r\n      cancelText=\"Отмена\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            form.resetFields();\r\n            onCreate(values);\r\n          })\r\n          .catch((info) => {\r\n            alert('нееверные данные:');\r\n          });\r\n      }}\r\n    >\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        name=\"form_in_modal\"\r\n        initialValues={{\r\n          modifier: 'public',\r\n        }}>\r\n        <Form.Item name=\"dateReg\" label=\"Дата покупки\" {...config}>\r\n          <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\r\n        </Form.Item>\r\n\r\n        <Kiosks />\r\n\r\n        <Type />\r\n\r\n        <Form.Item name=\"pays\" label=\"Оплата\"\r\n          rules={[{ required: true, message: 'Введите оплаченную сумму!' }]}>\r\n          <InputNumber defaultValue={0} min={0} step={0.01} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"sum\" label=\"Сумма\"\r\n          rules={[{ required: true, message: 'Введите сумму товара!' }]}>\r\n          <InputNumber defaultValue={0} min={0} step={0.01} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"positions\" label=\"Товары\"\r\n          rules={[{ required: true, message: 'Введите наименование товара!' }]}>\r\n          <Input />\r\n        </Form.Item>\r\n\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst Type = props => {\r\n  const typeOptions = [\r\n    {\r\n      value: 1,\r\n      label: 'Возврат',\r\n    },\r\n    {\r\n      value: 0,\r\n      label: 'Продажа',\r\n    },\r\n  ];\r\n  return (\r\n    <Form.Item name=\"chequeType\" label=\"Тип\"\r\n      rules={[{ required: true, message: 'Выберите тип!' }]}>\r\n      <Cascader\r\n        options={typeOptions}\r\n        placeholder=\"Выберите тип\" />\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nconst Kiosks = props => {\r\n  const kioskOptions = [\r\n    {\r\n      value: 'Киоск № 1',\r\n      label: 'Киоск № 1',\r\n    },\r\n    {\r\n      value: 'Киоск № 2',\r\n      label: 'Киоск № 2',\r\n    },\r\n    {\r\n      value: 'Киоск № 3',\r\n      label: 'Киоск № 3',\r\n    },\r\n    {\r\n      value: 'Киоск № 4',\r\n      label: 'Киоск № 4',\r\n    },\r\n    {\r\n      value: 'Киоск № 5',\r\n      label: 'Киоск № 5',\r\n    },\r\n    {\r\n      value: 'Киоск № 6',\r\n      label: 'Киоск № 6',\r\n    },\r\n    {\r\n      value: 'Киоск № 7',\r\n      label: 'Киоск № 7',\r\n    },\r\n    {\r\n      value: 'Киоск № 8',\r\n      label: 'Киоск № 8',\r\n    },\r\n    {\r\n      value: 'Киоск № 9',\r\n      label: 'Киоск № 9',\r\n    },\r\n    {\r\n      value: 'Киоск № 10',\r\n      label: 'Киоск № 10',\r\n    },\r\n    {\r\n      value: 'Киоск № 11',\r\n      label: 'Киоск № 11',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Form.Item name=\"kioskName\" label=\"Киоск\"\r\n      rules={[{ required: true, message: 'Выберите Киоск!' }]}>\r\n      <Cascader options={kioskOptions} placeholder=\"Выберите Киоск\" />\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport default ModalAddNew\r\n","import { connect } from 'react-redux';\r\nimport { getDataFromJson, deleteItem, addNewCheque } from './redux/redux';\r\nimport './App.css';\r\nimport Table from './Table/Table';\r\nimport { useState } from 'react';\r\nimport ModalAddNew from './ModalAddNew/ModalAddNew';\r\nimport { Button } from 'antd';\r\n\r\nfunction App(props) {\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  if (!props.state.initialized) {\r\n    props.getDataFromJson();\r\n    return <div>Загрузка</div>\r\n  }\r\n  const onCreate = (values) => {\r\n    let newCheque = {\r\n      chequeType: values.chequeType[0],\r\n      dateReg: values.dateReg.toDate(),\r\n      kioskName: values.kioskName[0],\r\n      sum: values.sum.toFixed(2) * 100,\r\n      pays: [{sum: values.pays.toFixed(2) * 100}],\r\n      positions: [{name: values.positions, quantity: 1}]\r\n    }\r\n    setVisible(false);\r\n    props.addNewCheque(newCheque);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Table data={props.state.data} deleteItem={props.deleteItem} />\r\n      <ModalAddNew \r\n        visible={visible}\r\n        onCreate={onCreate}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n        }}/>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            setVisible(true);\r\n          }}>Добавить новый чек</Button>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getDataFromJson, deleteItem, addNewCheque })(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux'\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}